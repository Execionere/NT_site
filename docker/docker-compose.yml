version: '3.8'

services:
  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: exsi       # Замените на ваше имя пользователя
      POSTGRES_PASSWORD: testhome # Замените на ваш пароль
      POSTGRES_DB: ntDB         # Замените на ваше имя базы данных
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql # Монтирование SQL-скрипта

  postgres_exporter:
    image: wrouesnel/postgres_exporter:latest
    restart: always
    environment:
      DATA_SOURCE_NAME: "postgresql://exsi:testhome@postgres:5432/ntDB"
    ports:
      - "9187:9187"
    depends_on:
      - postgres

  influxdb:
    image: influxdb:1.11
    restart: always
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb
      - ./init_influx.sh:/docker-entrypoint-initdb.d/init_influx.sh  # Монтирование скрипта
        command: ["/bin/bash", "/docker-entrypoint-initdb.d/init_influx.sh"]

  grafana:
    image: grafana/grafana:10.1.4-ubuntu
    restart: always
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=testhome # Замените на желаемый пароль администратора
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning #Провиженинг
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/

  prometheus:
    image: prom/prometheus:v2.47.1
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/configuration/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      
  node_exporter:
    image: prom/node-exporter:v1.3.1
    restart: always
    ports:
      - "9100:9100"

volumes:
  postgres_data:
  influxdb_data:
  grafana_data:
  prometheus_data:

networks:
  default:
    ipam:
      config:
        - subnet: 172.28.0.0/16
